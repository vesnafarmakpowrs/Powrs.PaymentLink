<?xml version="1.0" encoding="utf-8"?>
<ServiceConfiguration xmlns="http://waher.se/Schema/ServiceConfiguration.xsd">
	<StartupScript>
		<![CDATA[
			Global.["ApplyForAgentLegalId"]:= (ApplyForAgentLegalId(ValidatedUser,Password, PropertiesVector):= 
            (
		    try
			(
				 PLocalName:= "ed448";
            PNamespace:= "urn:ieee:iot:e2e:1.0";

            KeyId := GetSetting(ValidatedUser.username + ".KeyId","");
            KeyPassword:= GetSetting(ValidatedUser.username + ".KeySecret","");

            if(System.String.IsNullOrEmpty(KeyId) || System.String.IsNullOrEmpty(KeyPassword)) then
			(
				 Error("No signing keys or password available for user: " + userName);
			);
   
            Nonce:= Base64Encode(RandomBytes(32));
            S1:= ValidatedUser.username + ":" + Gateway.Domain + ":" + PLocalName + ":" + PNamespace + ":" + KeyId;
            KeySignature:= Base64Encode(Sha2_256HMac(Utf8Encode(S1),Utf8Encode(KeyPassword)));

            S2:= S1 + ":" + KeySignature + ":" + Nonce;

            foreach p in PropertiesVector do
            (
	        	S2 := S2 + ":" + p.name + ":" + p.value;
            );

            RequestSignature:= Base64Encode(Sha2_256HMac(Utf8Encode(S2),Utf8Encode(Password)));

            NewIdentity:= POST("https://" + Gateway.Domain + "/Agent/Legal/ApplyId",
                 {
                 "keyId": Str(KeyId),
	             "nonce": Str(Nonce),
	             "keySignature":  Str(KeySignature),
	             "requestSignature": Str(RequestSignature),
	             "Properties":  PropertiesVector
		 },
		   {"Accept" : "application/json",
		    "Authorization": "Bearer " + ValidatedUser.jwt,
		    "Referer": "https://" + Gateway.Domain + "/VaulterApi/PaymentLink/Account/CreateAccount.ws"
		   });		  
			)
			catch
			(
				Log.Error(Exception.Message, null);
				Error(Exception.Message);
			)
			finally
			(
				Destroy(Nonce);
				Destroy(S1);
				Destroy(KeySignature);
				Destroy(S2);
				Destroy(RequestSignature);
			);		    
            ););		
              ]]>
	</StartupScript>
</ServiceConfiguration>