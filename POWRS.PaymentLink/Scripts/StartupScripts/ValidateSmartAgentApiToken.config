<?xml version="1.0" encoding="utf-8"?>
<ServiceConfiguration xmlns="http://waher.se/Schema/ServiceConfiguration.xsd">
	<StartupScript>
		<![CDATA[
			Global.["ValidateSmartAdminApiToken"]:= (ValidateSmartAdminApiToken():= 
            (
				tokensInfo := Global.ValidateJwtToken();

				brokerAcc := select top 1 * from BrokerAccounts where UserName = tokensInfo.username and Enabled = true;
				if(brokerAcc == null) then
				(
					HttpError(401, "Unauthorized", "User don't have right to access");
				);
				
				brokerAccRole := Select top 1 * from POWRS.PaymentLink.Models.BrokerAccountRole where UserName = tokensInfo.username;
				if(brokerAccRole == null) then 
				(
					HttpError(401, "Unauthorized", "Users information are not existed or not propertly populated");
				);
				
				orgName := brokerAccRole.OrgName;
				role := brokerAccRole.Role;
				
				if(role != POWRS.PaymentLink.Models.AccountRole.SuperAdmin and role != POWRS.PaymentLink.Models.AccountRole.GroupAdmin) then
				(
					Forbidden("User don't have role to access smart admin");
				);

				res:= {
					authenticated: true,
					orgName: Str(orgName),
					role: role.ToString(),
					username: Str(tokensInfo.username),
					jwt: Str(tokensInfo.jwt)
				};				
           ););
        ]]>
	</StartupScript>
</ServiceConfiguration>
