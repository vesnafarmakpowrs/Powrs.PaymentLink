<?xml version="1.0" encoding="utf-8"?>
<ServiceConfiguration xmlns="http://waher.se/Schema/ServiceConfiguration.xsd">
	<StartupScript>
		<![CDATA[
			Global.["ValidateJwtToken"]:= (ValidateJwtToken():= 
            (
				if(Response != null) then 
				(
					Response.SetHeader("Access-Control-Allow-Origin","*");
				);

				if(Request == null) then 
				(
					HttpError(401, "Unauthorized", "Request not valid.");
				);
				
				earliestOpportunity:= Gateway.LoginAuditor.GetEarliestLoginOpportunity(Request.RemoteEndPoint, "HTTPS");
				if(earliestOpportunity != null and earliestOpportunity > NowUtc) then 
				(
					Forbidden("Not allowed");
				);

				jwtFactory:= null;
				reason:= null;
				
				if(!exists(PJwt:= Request.Header.Authorization.Value)) then 
				(
					HttpError(401, "Unauthorized", "JWT not present.");
				);
				
				PJwt:= Trim(PJwt.Replace("Bearer ", ""));
				Waher.Runtime.Inventory.Types.TryGetModuleParameter("JWT", jwtFactory);
				if(jwtFactory == null) then
				(
					InternalServerError("Unable to initiate jwt validation."); 
				);

				try 
				(
					Token:=Create(Waher.Security.JWT.JwtToken, PJwt);
				)
				catch
				(
					HttpError(401, "Unauthorized", "Token not valid"); 
				);
				
				if(!jwtFactory.IsValid(Token, reason)) then
				(
					HttpError(401, "Unauthorized", "Token " + reason);
				);

				array:= Split(Token.Claims.sub, "@");
				if(array.Length != 2) then 
				(
					HttpError(401, "Unauthorized", "Invalid token");
				);

				username:= Trim(array[0]);
				userDomain:= Trim(array[1]);

				if(System.String.IsNullOrWhiteSpace(username) || System.String.IsNullOrWhiteSpace(userDomain)) then
				(
					HttpError(401, "Unauthorized", "Invalid token");
				);

				res:= {
					username: Str(username),
					userDomain: Str(userDomain),
					jwt: Str(PJwt)
				};				
           ););
        ]]>
	</StartupScript>
</ServiceConfiguration>
