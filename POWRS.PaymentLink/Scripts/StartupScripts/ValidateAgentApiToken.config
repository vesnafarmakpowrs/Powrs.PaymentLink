<?xml version="1.0" encoding="utf-8"?>
<ServiceConfiguration xmlns="http://waher.se/Schema/ServiceConfiguration.xsd">
	<StartupScript>
		<![CDATA[
			Global.["ValidateAgentApiToken"]:= (ValidateAgentApiToken(requiresLegalIdentity):= 
            (
            try
            (
			   if(Response != null) then 
			   (
			       Response.SetHeader("Access-Control-Allow-Origin","*");
			   );
			   
               if(Request == null) then 
               (
                 Error("Forbidden");
               );

               header:= null;
               jwtFactory:= null;
               reason:= null;
               
               Request.Header.TryGetHeaderField("Authorization", header);
               PJwt:= Trim(header.Replace("Bearer ", ""));
               
               Waher.Runtime.Inventory.Types.TryGetModuleParameter("JWT", jwtFactory);
               if(jwtFactory == null) then 
               (
                  Error("Forbidden");
               );
               
               Token:=Create(Waher.Security.JWT.JwtToken, PJwt);
               if(!jwtFactory.IsValid(Token, reason)) then
               (
                  Error("Token " + reason);
               );
               
               array:= Split(Token.Claims.sub, "@");
               if(array.Length != 2) then 
               (
                  Error("Invalid token");
               );
               
               username:= Trim(array[0]);
               userDomain:= Trim(array[1]);
               gatewayDomain:= Trim(Gateway.Domain);
               
               if(System.String.IsNullOrWhiteSpace(username) || System.String.IsNullOrWhiteSpace(userDomain)) then
               (
                    Error("Invalid user");
               );
               
			   legalIdentity:= select top 1 Id from LegalIdentities where Account = username and State = "Approved";
			   isUserApproved:= !System.String.IsNullOrWhiteSpace(legalIdentity);
			   
			   if(requiresLegalIdentity and !isUserApproved) then
			   (			        
                   Error("User is not approved");
			   );
               
               res:= {
                 authenticated: true,
                 legalId: legalIdentity,
				 isApproved: isUserApproved,
                 username: Str(username),
				 jwt: Str(PJwt)
               };
            )
            catch
            (
               Log.Error(Exception, null);
               Forbidden(Exception.Message);
            );
           ););
              ]]>
	</StartupScript>
</ServiceConfiguration>
