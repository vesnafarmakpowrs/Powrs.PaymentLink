<?xml version="1.0" encoding="utf-8"?>
<ServiceConfiguration xmlns="http://waher.se/Schema/ServiceConfiguration.xsd">
	<StartupScript>
		<![CDATA[
			Global.["ValidateAgentApiToken"]:= (ValidateAgentApiToken(throwIfIdentityInvalid, throwIfContactNotPopulated):= 
            (
				tokensInfo := Global.ValidateJwtToken();

				legalIdentity:= select top 1 Id from LegalIdentities where Account = tokensInfo.username and State = "Approved" order by Created desc;
				isUserApproved:= !System.String.IsNullOrWhiteSpace(legalIdentity);

				if(throwIfIdentityInvalid and !isUserApproved) then
				(			        
					Forbidden("User is not approved");
				);

				contactFilled:= false;
				orgName := "";
				goToOnBoarding := false;
				isSubUser := false;
				
				try
				(
					brokerAccRole := Select top 1 * from POWRS.PaymentLink.Models.BrokerAccountRole where UserName = tokensInfo.username;
					if(brokerAccRole != null) then (
						orgName := brokerAccRole.OrgName;
						isSubUser := brokerAccRole.UserName != brokerAccRole.CreatorUserName;
						OrganizationContactInfo:= select top 1 * from POWRS.PaymentLink.Models.OrganizationContactInformation where OrganizationName = brokerAccRole.OrgName;
						contactFilled:= OrganizationContactInfo != null and OrganizationContactInfo.IsValid()
					);
					
					goToOnBoarding := !isUserApproved and !isSubUser;
				
				if(throwIfContactNotPopulated and !contactFilled) then 
				(
					Forbidden("Contact informations are not existent or not properly populated");
				);
   
				role := POWRS.PaymentLink.Models.AccountRole.User;
				objBrokerAccountRole := 
					select top 1 * 
					from POWRS.PaymentLink.Models.BrokerAccountRole 
					where UserName = tokensInfo.username;

				if (objBrokerAccountRole != null) then(
					role := objBrokerAccountRole.Role;
				);

				res:= {
					authenticated: true,
					legalId: legalIdentity,
					isApproved: isUserApproved,
					goToOnBoarding: goToOnBoarding,
					orgName: Str(orgName),
					contactInformationsPopulated: contactFilled,
					username: Str(tokensInfo.username),
					role: role.ToString(),
					jwt: Str(tokensInfo.jwt)
				};
				)
				finally
				(
				 error:= "";
				);				
           ););
        ]]>
	</StartupScript>
</ServiceConfiguration>
