<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->

	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>1.3</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="PaymentFailedTitle" xml:space="preserve">
    <value>Payment failed.</value>
  </data>
	<data name="PaymentFailedMessage" xml:space="preserve">
    <value>Hello {0}, we are here to inform you that payment for the product {1} failed.</value>
  </data>
	<data name="RetryMessage" xml:space="preserve">
    <value>Don't worry, we will try again few times in a next few days and will let you know how it went...</value>
  </data>
	<data name="MaxAttemptsNote" xml:space="preserve">
    <value>Note that maximum number of attempts is: {0}.</value>
  </data>
	<data name="CurrentAttempt" xml:space="preserve">
    <value>This is our {0} attempt.</value>
  </data>
	<data name="ExceedAttemptsMessage" xml:space="preserve">
    <value>Once this this number exceeds, your product will automatically be cancelled, and in order to renew, you will have to contact seller directly.</value>
  </data>
	<data name="BuyerDetailsCaption" xml:space="preserve">
    <value>Buyer Details</value>
  </data>
	<data name="NameColumn" xml:space="preserve">
    <value>Name</value>
  </data>
	<data name="AddressColumn" xml:space="preserve">
    <value>Address</value>
  </data>
	<data name="CityColumn" xml:space="preserve">
    <value>City</value>
  </data>
	<data name="PhoneNumberColumn" xml:space="preserve">
    <value>Phone Number</value>
  </data>
	<data name="EmailColumn" xml:space="preserve">
    <value>Email</value>
  </data>
	<data name="CardDetailsCaption" xml:space="preserve">
    <value>Card Details</value>
  </data>
	<data name="MaskedPanColumn" xml:space="preserve">
    <value>Masked Pan</value>
  </data>
	<data name="ExpirationDateColumn" xml:space="preserve">
    <value>Expiration Date</value>
  </data>
	<data name="BrandColumn" xml:space="preserve">
    <value>Brand</value>
  </data>
	<data name="AmountColumn" xml:space="preserve">
    <value>Amount</value>
  </data>
	<data name="CheckDetailsMessage" xml:space="preserve">
    <value><![CDATA[Please check card details and billing informations above, If something is not right, you can make changes <a href="{0}">here</a> If everything seems fine, just sit, relax, make sure that you have enough funds on the bank account and we will do the rest.]]></value>
  </data>
	<data name="ContactSellerMessage" xml:space="preserve">
    <value><![CDATA[If you want to know more details about this email and contract itself, please contact the seller directly at the phone number: <a href="tel:{0}">{0}</a> or mail: <a href="mailto:{1}">{1}</a> ]]></value>
  </data>
	<data name="FooterCompany" xml:space="preserve">
    <value>POWRS D.O.O. BEOGRAD, Srbija</value>
  </data>
	<data name="FooterCopyright" xml:space="preserve">
    <value>©2021 - {0} POWRS</value>
  </data>
	<data name="FooterWithdrawalNote" xml:space="preserve">
    <value><![CDATA[In accordance with the provision of Article 27 of the Consumer Protection Act, you can fill out the withdrawal form from the contract <a href="{0}">here</a> ]]></value>
  </data>
	<data name="PaymentCompletedTitle" xml:space="preserve">
    <value>Completed</value>
  </data>
	<data name="PaymentCompletedMessage" xml:space="preserve">
    <value>Hello {0}, we are happy to inform you that all due payments for {1} performed by the {2} are now completed.</value>
  </data>
	<data name="TransactionsInfoMessage" xml:space="preserve">
    <value>All the details about completed/failed transactions will be visible in the table below. If you have any question please contact seller directly.</value>
  </data>
	<data name="AllTransactionsCaption" xml:space="preserve">
    <value>All transactions</value>
  </data>
	<data name="AuthColumn" xml:space="preserve">
    <value>Auth..</value>
  </data>
	<data name="CodeColumn" xml:space="preserve">
    <value>Code</value>
  </data>
	<data name="DateColumn" xml:space="preserve">
    <value>Date</value>
  </data>
	<data name="RefundedStatus" xml:space="preserve">
    <value>Refunded</value>
  </data>
	<data name="CompletedStatus" xml:space="preserve">
    <value>Completed</value>
  </data>
	<data name="FailedStatus" xml:space="preserve">
    <value>Failed</value>
  </data>
	<data name="GoodbyeMessage" xml:space="preserve">
    <value>We are sad to say goodbye, we hope that you had good experience from using our platform.</value>
  </data>
	<data name="ThankYouMessage" xml:space="preserve">
    <value>Thank you for using Vaulter.</value>
  </data>
	<data name="PaymentCanceledTitle" xml:space="preserve">
    <value>Payment canceled.</value>
  </data>
	<data name="PaymentCanceledMessage" xml:space="preserve">
    <value>Hello {0}, we are sad to inform you that automatic payments for the product {1} performed by the {2} is canceled.</value>
  </data>
	<data name="MaxRetriesNote" xml:space="preserve">
    <value>Please note that the maximum number of retries is defined by the seller.</value>
  </data>
	<data name="CancellationNotInitiatedInfo" xml:space="preserve">
    <value><![CDATA[If the cancellation was not initiated by you, and you want to know more details about the contract itself, please contact the seller directly at the phone number: <a href='tel:{0}'>{0}</a> or mail: <a href='tel:{1}'>{1}</a> ]]> </value>
  </data>
	<data name="PaymentNotPerformedTitle" xml:space="preserve">
    <value>Payment not performed.</value>
  </data>
	<data name="PaymentNotPerformedMessage" xml:space="preserve">
    <value>Hello {0}, we are here to inform you that card registration for the {1} performed by the {1} is not performed.</value>
  </data>
	<data name="CancellationBuyerMessage" xml:space="preserve">
    <value>{0} initiated cancellation. If this is wrong please contact seller.</value>
  </data>
	<data name="CancellationSellerMessage" xml:space="preserve">
    <value>{0} initiated cancellation. For more details contact seller directly.</value>
  </data>
	<data name="CancellationDeadlineMessage" xml:space="preserve">
    <value>This will usually happen when payment deadline expires.</value>
  </data>
	<data name="RemoteIdColumn" xml:space="preserve">
    <value>Reference number</value>
  </data>
	<data name="PaymentDateColumn" xml:space="preserve">
    <value>Payment date</value>
  </data>
	<data name="BuyerInformationsColumn" xml:space="preserve">
    <value>Buyer Informations</value>
  </data>
	<data name="SellerInformationsColumn" xml:space="preserve">
    <value>Seller Informations</value>
  </data>
	<data name="OrganizationNumberColumn" xml:space="preserve">
    <value>Organization number</value>
  </data>
	<data name="TaxNumberColumn" xml:space="preserve">
    <value>Tax number</value>
  </data>
	<data name="TaxNumberColumn" xml:space="preserve">
    <value>Tax number</value>
  </data>
	<data name="WebsiteColumn" xml:space="preserve">
    <value>Website</value>
  </data>
	<data name="ApprovalCodeColumn" xml:space="preserve">
    <value>Approval Code</value>
  </data>
	<data name="PaymentReferenceColumn" xml:space="preserve">
    <value>Reference</value>
  </data>
	<data name="StatusCodeColumn" xml:space="preserve">
    <value>Status code</value>
  </data>
	<data name="StatusColumn" xml:space="preserve">
    <value>Status</value>
  </data>
	<data name="DescriptionColumn" xml:space="preserve">
    <value>Description</value>
  </data>
	<data name="PriceWithVatColumn" xml:space="preserve">
    <value>Price (Vat included) </value>
  </data>
	<data name="TotalColumn" xml:space="preserve">
    <value>Total </value>
  </data>
	<data name="TotalPaymentsColumn" xml:space="preserve">
    <value>Total payments</value>
  </data>
	<data name="TransactionDetailsColumn" xml:space="preserve">
    <value>Transaction details </value>
  </data>
	<data name="ProductDetailsColumn" xml:space="preserve">
    <value>Product details </value>
  </data>
	<data name="CardRegistrationCompletedColumn" xml:space="preserve">
    <value>Card registration completed </value>
  </data>
	<data name="CardRegistrationDescription" xml:space="preserve">
    <value>Hello {0}, your card is now registered. All payments regarding {1} will be automatically initiated by {2}. You can cancel any time on this {3}.</value>
  </data>
	<data name="StateChangedLabel" xml:space="preserve">
    <value>State changed</value>
  </data>
	<data name="PaymentCompleted" xml:space="preserve">
    <value>Payment completed</value>
  </data>
	<data name="PaymentFailed" xml:space="preserve">
    <value>Payment failed</value>
  </data>
	<data name="PaymentNotPerformed" xml:space="preserve">
    <value>Payment not performed</value>
  </data>
	<data name="PaymentCanceled" xml:space="preserve">
    <value>Payment canceled</value>
  </data>
	<data name="CardRegistrationCompleted" xml:space="preserve">
    <value>Card registration completed!</value>
  </data>
	<data name="Done" xml:space="preserve">
    <value>Deal done.</value>
  </data>
	<data name="StateChangedDescription" xml:space="preserve">
    <value>Hello, change happened for payment created for {0}.</value>
  </data>
	<data name="StateChangedAwaitingCardRegistrationDescription" xml:space="preserve">
    <value>Link is generated for {0} to registar card for future payment for {1}.</value>
  </data>
	<data name="StateChangedAwaitingCardRegistrationRefundDescription" xml:space="preserve">
    <value>Buyer will be charged {0} {1} in order to register card. After card registration, funds will be automatically refunded, and card will be saved for future payments untill the end of the contract.</value>
  </data>
	<data name="MaxPaymentAttemptsExceeded" xml:space="preserve">
    <value>Maximum failed attempts number exceeded. Contract is automatically canceled after {0} retries.</value>
  </data>
  <data name="PaymentFailedNextRetryMessage" xml:space="preserve">
    <value>Next retry will happend on {0}.</value>
  </data>
</root>